#
# Build Botframework-CLI on Windows agent 
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)

pool:
  name: Hosted Windows 2019 with VS2019

pr:
  branches:
    include:
     - master
  paths:
    include:
      - '*'
    exclude:
      - README.md
      - specs/*
      - PortingMap.md
      - ToolLifetimeSchedule.md
      - AzureCli.md
      - CONTRIBUTING.md
      - LICENSE
      - PRIVACY.md

jobs:
  - job: CLI
    variables:
      buildVersion: '4.10.0-preview.$(Build.BuildId)'
      _version: ${{coalesce(variables.version, variables.buildVersion)}}

    steps:
    - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
      displayName: 'Tag Build with version number'
      inputs:
        tags: 'Version=$(_version)'
      continueOnError: true
      condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], 'False'))

    - task: NodeTool@0
      displayName: 'Use Node 12.x'
      inputs:
        versionSpec: 12.x

    - task: Npm@1
      displayName: 'npm install --global @microsoft/rush'
      inputs:
        command: custom
        verbose: false
        customCommand: 'install --global @microsoft/rush'

    - task: Npm@1
      displayName: 'npm install coveralls --global'
      inputs:
        command: custom
        verbose: false
        customCommand: install coveralls --global

    - task: Npm@1
      displayName: 'npm install mocha-lcov-reporter --global'
      inputs:
        command: custom
        verbose: false
        customCommand: install mocha-lcov-reporter --global

    - task: Npm@1
      displayName: 'npm install jest --global'
      inputs:
        command: custom
        verbose: false
        customCommand: install jest --global
      enabled: false

    - task: Npm@1
      displayName: 'npm install jscover --global'
      inputs:
        command: custom
        verbose: false
        customCommand: install jscover --global

    - script: 'rush update'
      displayName: 'rush update'

    - script: 'rush build -p 2'
      displayName: 'rush build -p 2'

    - bash: 'jest --coverage && coveralls < coverage/lcov.info'
      displayName: jest --coverage
      continueOnError: true
      enabled: false

    - bash: |
       # Runs mocha lcov reporter. Ref:
       # https://www.npmjs.com/package/mocha-lcov-reporter
   
       rm -rf coverage
       rm -rf packages-cov
       mkdir coverage
   
       # instrument the packages
       jscover packages packages-cov
   
       # replace packages with instrumented version
       mv packages packages-orig
       mv packages-cov packages
   
       # run tests
       mocha -R mocha-lcov-reporter > coverage/coverage.lcov
   
       # TODO: The paths need to be fixed in the lcov output. See doc at link above.
   
       # restore original packages
       rm -rf packages
       mv packages-orig packages
      displayName: 'run mocha lcov reporter'
      continueOnError: true
      enabled: false

    - powershell: 'New-Item -ItemType directory -Path $(Build.SourcesDirectory)/coverage'
      displayName: 'Create coverage folder'
      continueOnError: true

    - script: 'rush coverage -v'
      displayName: 'rush coverage -v'
      continueOnError: true

    - script: 'rush report -v'
      displayName: 'rush report -v'
      continueOnError: true
      env:
        COVERALLS_REPO_TOKEN: $(TokenForCoveralls)
    
    - script: 'rush reportcoverage -v'
      displayName: 'rush reportcoverage -v'
      continueOnError: true
      env:
        COVERALLS_REPO_TOKEN: $(TokenForCoveralls)
      enabled: false

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.StagingDirectory)/coverage'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/coverage'
        Contents: '**'
        TargetFolder: '$(Build.StagingDirectory)/coverage'

    - task: CopyFiles@2
      displayName: 'Copy more Files to: $(Build.StagingDirectory)/coverage'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/packages'
        Contents: '*/coverage/**'
        TargetFolder: '$(Build.StagingDirectory)/coverage'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: coverage'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/coverage'
        ArtifactName: coverage
    
    - script: 'rush test -p 2 -v'
      displayName: 'rush test -p 2 -v'
      enabled: false
    
    - script: 'rush posttest'
      displayName: 'rush posttest'
      enabled: false

    - script: 'node ./common/scripts/version-and-pack.js --version $(_version)'
      displayName: 'Version and Pack'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/drop'
      inputs:
        SourceFolder: ./.output
        Contents: '**/*.tgz'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/drop'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/drop'
        ArtifactName: drop

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'

    - powershell: |
       Get-ChildItem -Path "$(Agent.HomeDirectory)" -Include "*.coverage" -Recurse 
       #| Copy-Item -Destination CodeCoverage
      displayName: 'Check for .coverage files'
      continueOnError: true
      condition: succeededOrFailed()

    - powershell: 'Get-ChildItem .. -ErrorAction Continue -Recurse -Force | Where {$_.FullName -notlike "*node_modules*"}'
      displayName: 'Dir workspace except node_modules'
      continueOnError: true
      condition: succeededOrFailed()

    - script: |
       cd ..
       dir /s
      displayName: 'Dir workspace'
      continueOnError: true
      condition: succeededOrFailed()
      enabled: false

