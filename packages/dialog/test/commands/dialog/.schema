{
  "$schema": "https://raw.githubusercontent.com/microsoft/botframework-sdk/master/schemas/component/component.schema",
  "type": "object",
  "title": "Component kinds",
  "description": "These are all of the kinds that can be created by the loader.",
  "oneOf": [
    {
      "$ref": "#/definitions/nuget1-10"
    },
    {
      "$ref": "#/definitions/nuget2"
    }
  ],
  "definitions": {
    "arrayExpression": {
      "$role": "expression",
      "title": "Array or expression",
      "description": "Array or expression to evaluate.",
      "oneOf": [
        {
          "type": "array",
          "title": "Array",
          "description": "Array constant."
        },
        {
          "$ref": "#/definitions/equalsExpression"
        }
      ]
    },
    "booleanExpression": {
      "$role": "expression",
      "title": "Boolean or expression",
      "description": "Boolean constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean constant.",
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=user.isVip"
          ]
        }
      ]
    },
    "component": {
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "condition": {
      "$role": "expression",
      "title": "Boolean condition",
      "description": "Boolean constant or expression to evaluate.",
      "oneOf": [
        {
          "$ref": "#/definitions/expression"
        },
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean value.",
          "default": true,
          "examples": [
            false
          ]
        }
      ]
    },
    "equalsExpression": {
      "$role": "expression",
      "type": "string",
      "title": "Expression",
      "description": "Expression starting with =.",
      "pattern": "^=.*\\S.*",
      "examples": [
        "=user.name"
      ]
    },
    "expression": {
      "$role": "expression",
      "type": "string",
      "title": "Expression",
      "description": "Expression to evaluate.",
      "pattern": "^.*\\S.*",
      "examples": [
        "user.age > 13"
      ]
    },
    "integerExpression": {
      "$role": "expression",
      "title": "Integer or expression",
      "description": "Integer constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "integer",
          "title": "Integer",
          "description": "Integer constant.",
          "default": 0,
          "examples": [
            15
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=user.age"
          ]
        }
      ]
    },
    "nuget1-10": {
      "$role": [],
      "title": "Some node",
      "description": "Definition.",
      "$package": {
        "name": "nuget1",
        "version": "10.0.1"
      },
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "nuget1-10"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "nuget2": {
      "$role": [],
      "title": "Some node",
      "description": "Definition.",
      "$package": {
        "name": "nuget2",
        "version": "1.0.1"
      },
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "nuget2"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "numberExpression": {
      "$role": "expression",
      "title": "Number or expression",
      "description": "Number constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "number",
          "title": "Number",
          "description": "Number constant.",
          "default": 0,
          "examples": [
            15.5
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=dialog.quantity"
          ]
        }
      ]
    },
    "objectExpression": {
      "$role": "expression",
      "title": "Object or expression",
      "description": "Object or expression to evaluate.",
      "oneOf": [
        {
          "type": "object",
          "title": "Object",
          "description": "Object constant."
        },
        {
          "$ref": "#/definitions/equalsExpression"
        }
      ]
    },
    "role": {
      "title": "$role",
      "description": "Defines the role played in the dialog schema from [expression|interface|implements($kind)|extends($kind)].",
      "type": "string",
      "pattern": "^((expression)|(interface)|(implements\\([a-zA-Z][a-zA-Z0-9.]*\\))|(extends\\([a-zA-Z][a-zA-Z0-9.]*\\)))$"
    },
    "stringExpression": {
      "$role": "expression",
      "title": "String or expression",
      "description": "Interpolated string or expression to evaluate.",
      "oneOf": [
        {
          "type": "string",
          "title": "String",
          "description": "Interpolated string",
          "pattern": "^(?!(=)).*",
          "examples": [
            "Hello ${user.name}"
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=concat('x','y','z')"
          ]
        }
      ]
    },
    "valueExpression": {
      "$role": "expression",
      "title": "Any or expression",
      "description": "Any constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "object",
          "title": "Object",
          "description": "Object constant."
        },
        {
          "type": "array",
          "title": "Array",
          "description": "Array constant."
        },
        {
          "type": "string",
          "title": "String",
          "description": "Interpolated string.",
          "pattern": "^(?!(=)).*",
          "examples": [
            "Hello ${user.name}"
          ]
        },
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean constant",
          "examples": [
            false
          ]
        },
        {
          "type": "number",
          "title": "Number",
          "description": "Number constant.",
          "examples": [
            15.5
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=..."
          ]
        }
      ]
    }
  }
}
