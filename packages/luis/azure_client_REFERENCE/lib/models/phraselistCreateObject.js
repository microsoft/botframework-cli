/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Object model for creating a phraselist model.
 *
 */
class PhraselistCreateObject {
  /**
   * Create a PhraselistCreateObject.
   * @property {string} [phrases] List of comma-separated phrases that
   * represent the Phraselist.
   * @property {string} [name] The Phraselist name.
   * @property {boolean} [isExchangeable] An exchangeable phrase list feature
   * are serves as single feature to the LUIS underlying training algorithm. It
   * is used as a lexicon lookup feature where its value is 1 if the lexicon
   * contains a given word or 0 if it doesnâ€™t. Think of an exchangeable as a
   * synonyms list. A non-exchangeable phrase list feature has all the phrases
   * in the list serve as separate features to the underlying training
   * algorithm. So, if you your phrase list feature contains 5 phrases, they
   * will be mapped to 5 separate features. You can think of the
   * non-exchangeable phrase list feature as an additional bag of words that
   * you are willing to add to LUIS existing vocabulary features. Think of a
   * non-exchangeable as set of different words. Default value is true. Default
   * value: true .
   */
  constructor() {
  }

  /**
   * Defines the metadata of PhraselistCreateObject
   *
   * @returns {object} metadata of PhraselistCreateObject
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PhraselistCreateObject',
      type: {
        name: 'Composite',
        className: 'PhraselistCreateObject',
        modelProperties: {
          phrases: {
            required: false,
            serializedName: 'phrases',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          isExchangeable: {
            required: false,
            serializedName: 'isExchangeable',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = PhraselistCreateObject;
