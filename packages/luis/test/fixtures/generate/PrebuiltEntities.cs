// <auto-generated>
// Code generated by luis:generate:cs
// Tool github: https://github.com/microsoft/botframwork-cli
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using System;
using System.Collections.Generic;
using Microsoft.Bot.Builder;
using Microsoft.Bot.Builder.AI.Luis;
namespace Luis
{
    public partial class ContosoApp: IRecognizerConvert
    {
        [JsonProperty("text")]
        public string Text;

        [JsonProperty("alteredText")]
        public string AlteredText;

        public enum Intent {
        };
        [JsonProperty("intents")]
        public Dictionary<Intent, IntentScore> Intents;

        public class _Entities
        {
            // Built-in entities
            public Age[] age;
            public Age[] begin;
            public Age[] end;
            public DateTimeSpec[] datetime;
            public DateTimeSpec[] arrive;
            public DateTimeSpec[] leave;
            public Dimension[] dimension;
            public Dimension[] length;
            public Dimension[] width;
            public string[] email;
            public string[] receiver;
            public string[] sender;
            public GeographyV2[] geographyV2;
            public GeographyV2[] endloc;
            public GeographyV2[] startloc;
            public Money[] money;
            public Money[] max;
            public Money[] min;
            public double[] number;
            public double[] ordinal;
            public double[] start;
            public OrdinalV2[] ordinalV2;
            public OrdinalV2[] endpos;
            public OrdinalV2[] startpos;
            public double[] percentage;
            public double[] maximum;
            public double[] minimum;
            public string[] personName;
            public string[] child;
            public string[] parent;
            public string[] phonenumber;
            public string[] newPhone;
            public string[] old;
            public Temperature[] temperature;
            public Temperature[] a;
            public Temperature[] b;
            public string[] url;
            public string[] oldURL;


            // Instance
            public class _Instance
            {
                public InstanceData[] a;
                public InstanceData[] age;
                public InstanceData[] arrive;
                public InstanceData[] b;
                public InstanceData[] begin;
                public InstanceData[] child;
                public InstanceData[] datetime;
                public InstanceData[] dimension;
                public InstanceData[] email;
                public InstanceData[] end;
                public InstanceData[] endloc;
                public InstanceData[] endpos;
                public InstanceData[] geographyV2;
                public InstanceData[] leave;
                public InstanceData[] length;
                public InstanceData[] max;
                public InstanceData[] maximum;
                public InstanceData[] min;
                public InstanceData[] minimum;
                public InstanceData[] money;
                public InstanceData[] newPhone;
                public InstanceData[] number;
                public InstanceData[] old;
                public InstanceData[] oldURL;
                public InstanceData[] ordinal;
                public InstanceData[] ordinalV2;
                public InstanceData[] parent;
                public InstanceData[] percentage;
                public InstanceData[] personName;
                public InstanceData[] phonenumber;
                public InstanceData[] receiver;
                public InstanceData[] sender;
                public InstanceData[] start;
                public InstanceData[] startloc;
                public InstanceData[] startpos;
                public InstanceData[] temperature;
                public InstanceData[] url;
                public InstanceData[] width;
            }
            [JsonProperty("$instance")]
            public _Instance _instance;
        }
        [JsonProperty("entities")]
        public _Entities Entities;

        [JsonExtensionData(ReadData = true, WriteData = true)]
        public IDictionary<string, object> Properties {get; set; }

        public void Convert(dynamic result)
        {
            var app = JsonConvert.DeserializeObject<ContosoApp>(
                JsonConvert.SerializeObject(
                    result,
                    new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore, Error = OnError }
                )
            );
            Text = app.Text;
            AlteredText = app.AlteredText;
            Intents = app.Intents;
            Entities = app.Entities;
            Properties = app.Properties;
        }

        private static void OnError(object sender, ErrorEventArgs args)
        {
            // If needed, put your custom error logic here
            Console.WriteLine(args.ErrorContext.Error.Message);
            args.ErrorContext.Handled = true;
        }

        public (Intent intent, double score) TopIntent()
        {
            Intent maxIntent = Intent.None;
            var max = 0.0;
            foreach (var entry in Intents)
            {
                if (entry.Value.Score > max)
                {
                    maxIntent = entry.Key;
                    max = entry.Value.Score.Value;
                }
            }
            return (maxIntent, max);
        }
    }
}
